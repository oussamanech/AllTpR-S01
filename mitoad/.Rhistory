1+1
1+1
1+1
clear
1
1
library(dplyr)
library(dplyr)
library(dplyr)
library(dplyr)
library(dplyr)
library(dplyr)
library(dplyr)
library(tidyr)
library(ggplot2)
library(maps)
install.packages("maps")
library(maps)
library(maps)
library(maps)
library(dplyr)
library(tidyr)
library(ggplot2)
library(maps)
plot(1:20, main = "Заголовок")
legend("topleft", pch = 1, legend = "Twenty dots")
legend("topleft", pch = 1, legend = "Twenty dots")
plot(1:20, main = "Заголовок")
legend("topleft", pch = 1, legend = "Twenty dots")
title(main = "Title") #conflict
plot(cars)
plot(trees)
# Graphics devices for BMP, JPEG, PNG and TIFF format bitmap files
png(file = "1-20.png", bg = "transparent")
plot(1:20)
dev.off()
# par() can be used to set or query graphical parameters
old.par <- par(mfrow = c(2, 1))
hist(cars$speed, main = "")
hist(cars$dist, main = "")
par(old.par)
plot(1:20)
text(locator(), "Locator", pos = 4)
data(Indometh)
time
# The database is attached to the R search path. This means that the database
# is searched by R when evaluating a variable, so objects in the database
# can be accessed by simply giving their names.
attach(Indometh)
time
# Зависимость концентрации индометацина в крови от времени
plot(time, conc)
# Нужно отобразить средние значения концентрации индометацина для каждой временной точки
unique(time)
(means <- tapply(conc, time, mean))
# индометацина – одного из наиболее активных противовоспалительных препаратов.
# индометацина – одного из наиболее активных противовоспалительных препаратов.
#----
ggplot(data = mpg)
plot(1:20, main = "Заголовок")
#----
ggplot(data = mpg)
plot(1:20, main = "Заголовок")
#----
ggplot(data = mpg)
#----
ggplot(data = mpg)
#----
ggplot(data = mpg)
ggplot(data = mpg)
1+1
1+1
plot(1:20, main = "Заголовок")
source('D:/Study cours/20-КМ-ПР1/Nechnache/mitoad/code/lb3.R', encoding = 'UTF-8')
plot(1:20, main = "Заголовок")
flights_sml <- select(flights,
year:day,
ends_with("delay"),
distance,
air_time
)
1+1
library(dplyr)
library(tidyr)
library(ggplot2)
library(maps)
#----
ggplot(data = mpg)
png(file = "Plots/lr4_2.png", bg = "transparent")
plot(1:20)
dev.off()
#Сформируйте нормально распределенную совокупность x.norm из 200
#наблюдений со средним значением 0 и стандартным отклонением 10.
X <- rnorm(n = 200, mean = 0, sd  = 10)
hist(x)
#Сформируйте нормально распределенную совокупность x.norm из 200
#наблюдений со средним значением 0 и стандартным отклонением 10.
x <- rnorm(n = 200, mean = 0, sd  = 10)
hist(x)
hist(x,15)
hist(x,15)
hist(x)
hist(x,15)
hist(x,breaks = 20)
hist(x,breaks = 15)
hist(x,breaks = 17)
hist(x,breaks = 15)
#Сформируйте нормально распределенную совокупность x.norm из 200
#наблюдений со средним значением 0 и стандартным отклонением 10.
x <- xnorm(n = 200, mean = 0, sd  = 10)
#Сформируйте нормально распределенную совокупность x.norm из 200
#наблюдений со средним значением 0 и стандартным отклонением 10.
x <- x.norm(n = 200, mean = 0, sd  = 10)
r
#Сформируйте нормально распределенную совокупность x.norm из 200
#наблюдений со средним значением 0 и стандартным отклонением 10.
x <- rnorm(n = 200, mean = 0, sd  = 10)
#Сформируйте нормально распределенную совокупность x.norm из 200
#наблюдений со средним значением 0 и стандартным отклонением 10.
x <- xnorm(n = 200, mean = 0, sd  = 10)
r
#Сформируйте нормально распределенную совокупность x.norm из 200
#наблюдений со средним значением 0 и стандартным отклонением 10.
x <- rnorm(n = 200, mean = 0, sd  = 10)
x <- rnorm(n = 200, mean = 0, sd  = 10)
png(file = "Plots/lr4_2.png", bg = "transparent")
plot(x)
dev.off()
x <- rnorm(n = 200, mean = 0, sd  = 10)
png(file = "Plots/lr4_2.png", bg = "transparent")
plot(x, breaks = 15)
dev.off()
x <- rnorm(n = 200, mean = 0, sd  = 10)
png(file = "Plots/lr4_2.png", bg = "transparent")
plot(x,15)
dev.off()
png(file = "Plots/lr4_2.png", bg = "transparent")
#plot(x)
hist(x)
dev.off()
x <- rnorm(n = 200, mean = 0, sd  = 10)
png(file = "Plots/lr4_2.png", bg = "transparent")
plot(x)
hist(x)
hist(x,breaks = 15)
dev.off()
#Загрузите dataset mpg из пакета ggplot2. Ознакомьтесь с переменными.
ggplot2(data = mpg)
#Загрузите dataset mpg из пакета ggplot2. Ознакомьтесь с переменными.
ggplot(data = mpg)
?mpg
#
ggplot(mpg, aes(x=cyl, y=hwy)) + geom_point()
library(dplyr)
library(tidyr)
library(ggplot2)
library(maps)
#Создайте с помощью функции plot() идентичный график:
#Сохраните его в папке Plots
#Сформируйте нормально распределенную совокупность x.norm из 200
#наблюдений со средним значением 0 и стандартным отклонением 10.
x <- rnorm(n = 200, mean = 0, sd  = 10)
png(file = "Plots/lr4_2.png", bg = "transparent")
plot(x)
hist(x)
hist(x,breaks = 15)
dev.off()
#Загрузите dataset mpg из пакета ggplot2. Ознакомьтесь с переменными.
ggplot(data = mpg)
?mpg
#1. Постройте диаграмму рассеяния hwy от cyl.
ggplot(mpg, aes(x=cyl, y=hwy)) + geom_point()
View(Indometh)
View(old.par)
#1. Постройте диаграмму рассеяния hwy от cyl.
ggplot(mpg, aes(x=cyl, y=hwy , position = "jitter")) + geom_point()
#1. Постройте диаграмму рассеяния hwy от cyl.
ggplot(mpg, aes(x=cyl, y=hwy ) + geom_point()
#1. Постройте диаграмму рассеяния hwy от cyl.
ggplot(mpg, aes(x=cyl, y=hwy )) + geom_point()
#1. Постройте диаграмму рассеяния hwy от cyl.
ggplot(mpg, aes(x=cyl, y=hwy )) + geom_point()
ggplot(mpg, aes(x=cyl, y=hwy , position = "jitter")) + geom_point()
#1. Постройте диаграмму рассеяния hwy от cyl.
ggplot(mpg, aes(x=cyl, y=hwy )) + geom_point()
#1. Постройте диаграмму рассеяния hwy от cyl.
ggplot(mpg, aes(x=cyl, y=hwy )) + geom_point()
ggplot(mpg, aes(x=cyl, y=hwy , position = "jitter")) + geom_point()
?mpg
##Нет никакой разницы
ggplot(data = mpg) + geom_point(mapping = aes(x = displ, y = hwy, color = "blue"))
#1. Постройте диаграмму рассеяния hwy от cyl.
ggplot(mpg, aes(x=cyl, y=hwy )) + geom_point()
#Постройте такую же диаграмму с параметром position = "jitter", проанализируйте разницу.
ggplot(mpg, aes(x=cyl, y=hwy ), position = "jitter") + geom_point()
##Нет никакой разницы
ggplot(data = mpg) + geom_point(mapping = aes(x = displ, y = hwy, color = "blue"))
ggplot(data = mpg) + geom_point(mapping = aes(x = displ, y = hwy), colour = "blue")
#Постройте такую же диаграмму с параметром position = "jitter", проанализируйте разницу.
ggplot(mpg, aes(x=cyl, y=hwy )) + geom_point(position='jitter',)
#1. Постройте диаграмму рассеяния hwy от cyl.
ggplot(mpg, aes(x=cyl, y=hwy )) + geom_point()
#Постройте такую же диаграмму с параметром position = "jitter", проанализируйте разницу.
ggplot(mpg, aes(x=cyl, y=hwy )) + geom_point(position='jitter',)
#6. Что будет, если отобразить через aesthetic не переменную, а, например, aes(colour = displ < 5)?
#Эстетические сопоставления обрабатываются как выражения, которые должны оцениваться в контексте аргумента `data`
#,поэтому он будет оценивать выражение и строить график результата.
ggplot(data = mpg) + geom_point(aes(x = cty, y = hwy, colour = displ < 5))
#6. Что будет, если отобразить через aesthetic не переменную, а, например, aes(colour = displ < 5)?
#Эстетические сопоставления обрабатываются как выражения, которые должны оцениваться в контексте аргумента `data`
#,поэтому он будет оценивать выражение и строить график результата.
ggplot(data = mpg) + geom_point(aes(x = cty, y = hwy, colour = displ < 5))
#8. Какой параметр задает . (точка) для следующих графиков?
ggplot(data = mpg) + geom_point(mapping = aes(x = displ, y = hwy)) + facet_grid(drv ~ .)
ggplot(data = mpg) + geom_point(mapping = aes(x = displ, y = hwy)) + facet_grid(. ~ cyl)
#8. Какой параметр задает . (точка) для следующих графиков?
ggplot(data = mpg) + geom_point(mapping = aes(x = displ, y = hwy)) + facet_grid(drv ~ .)
ggplot(data = mpg) + geom_point(mapping = aes(x = displ, y = hwy)) + facet_grid(. ~ cyl)
##`.` - это просто заполнитель, поэтому мы можем иметь фасет только в одном измерении.
##`.` - это просто заполнитель, поэтому мы можем иметь фасет только в одном измерении.
##Это необходимо, потому что иногда односторонние формулы могут вызывать проблемы.
##`.` - это просто заполнитель, поэтому мы можем иметь фасет только в одном измерении.
##Это необходимо, потому что иногда односторонние формулы могут вызывать проблемы.
##`.` - это просто заполнитель, поэтому мы можем иметь фасет только в одном измерении.
##Это необходимо, потому что иногда односторонние формулы могут вызывать проблемы.
##`.` - это просто заполнитель, поэтому мы можем иметь фасет только в одном измерении.
##Это необходимо, потому что иногда односторонние формулы могут вызывать проблемы.
##`.` - это просто заполнитель, поэтому мы можем иметь фасет только в одном измерении.
##Это необходимо, потому что иногда односторонние формулы могут вызывать проблемы.
##`.` - это просто заполнитель, поэтому мы можем иметь фасет только в одном измерении.
##Это необходимо, потому что иногда односторонние формулы могут вызывать проблемы.
#12. Как можно улучшить следующий график?
ggplot(data = mpg, mapping = aes(x = cty, y = hwy)) + geom_point()
+ geom_point(position = 'jitter', alpha=0.5) + geom_smooth(method='lm')
ggplot(data = mpg, mapping = aes(x = cty, y = hwy))
+ geom_point(position = 'jitter', alpha=0.5) + geom_smooth(method='lm')
#->  используя position_jitter, делая точки прозрачными и добавляя линию.
ggplot(data = mpg, mapping = aes(x = cty, y = hwy))+ geom_point(position = 'jitter', alpha=0.5) + geom_smooth(method='lm')
#->  используя position_jitter, делая точки прозрачными и добавляя линию.
ggplot(data = mpg, mapping = aes(x = cty, y = hwy))+ geom_point(position = 'jitter', alpha=0.5) + geom_smooth(method='lm')
#13. Преобразуйте stacked bar chart в круговую диаграмму с помощью coord_polar().
ggplot(mpg, aes(x = 1, fill=factor(drv))) +
geom_bar(width=1, stat='count')
## v2 с помощью coord_polar()
ggplot(mpg, aes(x = 1, fill=factor(drv))) +
geom_bar(width=1, stat='count') +
coord_polar(theta='y')
#Для чего предназначен geom_abline()?
ggplot(data = mpg, mapping = aes(x = cty, y = hwy)) + geom_point() + geom_abline() + coord_fixed()
1+1
install.packages(c(""devtools"", ""roxygen2"", ""testthat"", ""knitr""))
install.packages(c("devtools", "roxygen2", "testthat", "knitr"))
View(Indometh)
install.packages(c("devtools", "roxygen2", "testthat", "knitr"))
